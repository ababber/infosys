# This workflow will build a Node.js project and deploy it to an Azure Functions App on Windows or Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see:
#   - https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-node
#   - https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-typescript
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Node.js project to Azure Function App

on:
  push:
    branches: ["main"]

env:
  # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_NAME: 'Infy'   
  # set this to the path to your function app project, defaults to the repository root
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './Infy'       
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest 
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    # - name: 'Login via Azure CLI'
    #   uses: azure/login@v1
    #   with:
    #     creds: "${ { secrets.AZURE_RBAC_CREDENTIALS } }"
    # remove spaces and quotes in above line 
    # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install Azure Functions Core Tools'
      run: npm install -g azure-functions-core-tools@4 --unsafe-perm

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        echo "Navigating to: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        if [ -d "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}" ]; then
          pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
          npm install
          npm run build --if-present
          npm run test --if-present
          popd
        else
          echo "Directory ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} does not exist"
          exit 1
        fi

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        # Remove publish-profile to use Azure RBAC
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} 

    - name: Debug Publish Profile
      run: |
        if [ -v "AZURE_FUNCTIONAPP_PUBLISH_PROFILE" ]; then
          echo "AZURE_FUNCTIONAPP_PUBLISH_PROFILE is set."
        else
          echo "AZURE_FUNCTIONAPP_PUBLISH_PROFILE is empty or not set."
          exit 1
        fi
      env:
        AZURE_FUNCTIONAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}


    # - name: 'Debug List files in repo'
    #   run: ls -R
