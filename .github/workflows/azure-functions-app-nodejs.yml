name: Deploy Node.js project to Azure Function App

on:
  push:
    branches: ["main"]

env:
  # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_NAME: 'Infy'   
  # set this to the path to your function app project, defaults to the repository root
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './Infy'       
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest 
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    # - name: 'Login via Azure CLI'
    #   uses: azure/login@v1
    #   with:
    #     creds: "${{ secrets.AZURE_RBAC_CREDENTIALS }}"
    # remove spaces and quotes in above line 
    # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install Azure Functions Core Tools'
      run: npm install -g azure-functions-core-tools@4 --unsafe-perm

    # - name: 'Resolve Project Dependencies Using Npm'
    #   shell: bash
    #   run: |
    #     echo "Navigating to: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
    #     if [ -d "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}" ]; then
    #       pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
    #       npm install
    #       npm run build --if-present
    #       npm run test --if-present
    #       popd
    #     else
    #       echo "Directory ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} does not exist"
    #       exit 1
    #     fi

    - name: 'Install Dependencies'
      shell: bash
      run: |
        echo "Installing dependencies in: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        npm install
        popd

    - name: 'Run Tests'
      shell: bash
      run: |
        echo "Running tests in: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        npm run test
        popd

    - name: 'Build Application'
      shell: bash
      run: |
        echo "Building application in: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        npm run build --if-present
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        # ignore the warning for the line below, debug already confirmed the secret is set
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} 

    # - name: Debug Publish Profile
    #   run: |
    #     if [ -v "AZURE_FUNCTIONAPP_PUBLISH_PROFILE" ]; then
    #       echo "AZURE_FUNCTIONAPP_PUBLISH_PROFILE is set."
    #     else
    #       echo "AZURE_FUNCTIONAPP_PUBLISH_PROFILE is empty or not set."
    #       exit 1
    #     fi
    #   env:
    #     AZURE_FUNCTIONAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}


    # - name: 'Debug List files in repo'
    #   run: ls -R
